{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\weather-app\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport Mainside from \"./Components/mainside/mainside.js\";\nimport Secondside from \"./Components/secondside/secondside\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.onLocationState = () => {\n      let lat = this.state.lat;\n      let lon = this.state.lon;\n      const key = \"fd3b081fa5f1791533d9fa25f99be333\";\n      const urlfor = \"https://api.openweathermap.org/data/3.0/onecall?lat=\" + lat + \"&lon=\" + lon + \"&exclude=hourly,minutely&appid=\" + key + \"&units=metric\";\n      fetch(urlfor).then(res => res.json()).then(res => {\n        const current = this.state.data.concat([res.current]);\n        const filtercurrent = current.filter(filtred => res.current === filtred);\n        const daily = this.state.dataForecast.concat([res.daily]);\n        const filterdaily = daily.filter(filtred => res.daily === filtred);\n        let objectkey = filterdaily[Object.keys(filterdaily)[0]];\n        this.setState({\n          data: filtercurrent,\n          dataForecast: objectkey\n        });\n        console.log(filtercurrent);\n      }).catch(error => console.log(error, \"Some error here with API Location\"));\n      navigator.geolocation.getCurrentPosition(position => {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n        const url = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lng}&limit=1&appid=${key}`;\n        fetch(url).then(res => {\n          return res.json();\n        }).then(res => {\n          let locationCity = res[0].name + \", \" + res[0].country;\n          this.setState({\n            locationState: locationCity\n          });\n        }).catch(error => console.log(error, \"Some error here with Geolocation Finder\"));\n      });\n      const url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + this.state.locationState + \"&appid=\" + key + \"&units=metric\";\n      fetch(url).then(res => res.json()).then(res => {\n        const coord = this.state.data.concat([res.coord]);\n        const filterCoord = coord.filter(filtred => res.coord === filtred);\n        this.setState({\n          lat: filterCoord[0].lat,\n          lon: filterCoord[0].lon\n        });\n      }).catch(error => console.log(error, \"Some error here with API Location\"));\n    };\n    this.state = {\n      dataForecast: [],\n      data: [],\n      locationState: \"Bucharest\",\n      lat: \"44.4361414\",\n      lon: \"26.1027202\"\n    };\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onLocationState = this.onLocationState.bind(this);\n    this.onLocationState = this.onLocationState.bind(this);\n  }\n  onChangeHandler(event) {\n    this.setState({\n      locationState: event.target.value\n    });\n  }\n  onSubmitHandler(e) {\n    e.preventDefault();\n    this.onLocationState();\n    this.handleLocation();\n  }\n  componentDidMount() {\n    this.onLocationState();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Mainside, {\n        data: this.state.data,\n        locationState: this.state.locationState,\n        onSubmit: this.onSubmitHandler.bind(this),\n        onChangeEvent: this.onChangeHandler.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Secondside, {\n        dataForecast: this.state.dataForecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Mainside","Secondside","React","Component","App","constructor","props","onLocationState","lat","state","lon","key","urlfor","fetch","then","res","json","current","data","concat","filtercurrent","filter","filtred","daily","dataForecast","filterdaily","objectkey","Object","keys","setState","console","log","catch","error","navigator","geolocation","getCurrentPosition","position","coords","latitude","lng","longitude","url","locationCity","name","country","locationState","coord","filterCoord","onSubmitHandler","bind","onChangeHandler","event","target","value","e","preventDefault","handleLocation","componentDidMount","render"],"sources":["C:/Users/andre/weather-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Mainside from \"./Components/mainside/mainside.js\";\nimport Secondside from \"./Components/secondside/secondside\";\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataForecast: [],\n      data: [],\n      locationState: \"Bucharest\",\n      lat: \"44.4361414\",\n      lon: \"26.1027202\",\n    };\n\n    this.onSubmitHandler = this.onSubmitHandler.bind(this);\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onLocationState = this.onLocationState.bind(this);\n    this.onLocationState = this.onLocationState.bind(this);\n  }\n\n  onChangeHandler(event) {\n    this.setState({\n      locationState: event.target.value,\n    });\n  }\n\n  onSubmitHandler(e) {\n    e.preventDefault();\n    this.onLocationState();\n    this.handleLocation();\n  }\n\n  onLocationState = () => {\n    let lat = this.state.lat;\n    let lon = this.state.lon;\n    const key = \"fd3b081fa5f1791533d9fa25f99be333\";\n        const urlfor = \"https://api.openweathermap.org/data/3.0/onecall?lat=\" + \n        lat + \"&lon=\" + lon + \"&exclude=hourly,minutely&appid=\" + key + \"&units=metric\";\n    fetch(urlfor)\n      .then((res) => res.json())\n      .then((res) => {\n        const current = this.state.data.concat([res.current]);\n        const filtercurrent = current.filter(\n          (filtred) => res.current === filtred\n        );\n        const daily = this.state.dataForecast.concat([res.daily]);\n        const filterdaily = daily.filter((filtred) => res.daily === filtred);\n        let objectkey = filterdaily[Object.keys(filterdaily)[0]];\n\n        this.setState({\n          data: filtercurrent,\n          dataForecast: objectkey,\n        });\n        console.log(filtercurrent);\n      })\n      .catch((error) =>\n        console.log(error, \"Some error here with API Location\")\n      );\n      navigator.geolocation.getCurrentPosition((position) => {\n        const lat = position.coords.latitude;\n        const lng = position.coords.longitude;\n        const url = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lng}&limit=1&appid=${key}`;\n        fetch(url)\n          .then((res) => {\n            return res.json();\n          })\n          .then((res) => {\n            let locationCity = res[0].name + \", \" + res[0].country;\n            this.setState({\n              locationState: locationCity,\n            });\n          })\n          .catch((error) =>\n            console.log(error, \"Some error here with Geolocation Finder\")\n          );\n      });\n      const url =\n        \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n        this.state.locationState +\n        \"&appid=\" +\n        key +\n        \"&units=metric\";\n      fetch(url)\n        .then((res) => res.json())\n        .then((res) => {\n          const coord = this.state.data.concat([res.coord]);\n          const filterCoord = coord.filter((filtred) => res.coord === filtred);\n          this.setState({\n            lat: filterCoord[0].lat,\n            lon: filterCoord[0].lon,\n          });\n        })\n        .catch((error) =>\n          console.log(error, \"Some error here with API Location\")\n        );\n  };\n\n\n\n  componentDidMount() {\n    this.onLocationState();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Mainside\n          data={this.state.data}\n          locationState={this.state.locationState}\n          onSubmit={this.onSubmitHandler.bind(this)}\n          onChangeEvent={this.onChangeHandler.bind(this)}\n        />\n        <Secondside dataForecast={this.state.dataForecast} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}